{"version":3,"file":"static/js/454.66fa03a3.chunk.js","mappings":"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","sources":["components/pages.styled.jsx","components/form/Form.styled.jsx","components/form/Form.jsx","components/contacts/Contacts.styled.jsx","components/notafication/Notafication.styled.jsx","components/notafication/Notafication.jsx","components/contacts/Contacts.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Heading = styled.h2`\n  margin-top: 20px;\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const HomeContainer = styled.section`\n  background: #dadada;\n  max-width: 800px;\n  height: 400px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 20px;\n  font-weight: 700;\n  font-size: 18px;\n  border: 1px solid;\n  border-radius: 4px;\n  box-shadow: 4px 2px 2px #999696;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const HomeTitle = styled.h1`\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const HomeSubtitle = styled.h2`\n  font-size: 20px;\n`;\n\nexport const HomeText = styled.p`\n  font-size: 18px;\n`;\n\nexport const WrapperStyled = styled.div`\n  background: #fff;\n  width: 500px;\n  margin: 100px auto;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid #000;\n  border-radius: 4px;\n  box-shadow: 2px 2px 4px #999696;\n`;\n\nexport const FormTitle = styled.h1`\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nexport const FormContent = styled.div`\n  padding: 35px;\n  text-align: center;\n`;\n\nexport const FormLabel = styled.label`\n  padding: 12px 5px;\n`;\n\nexport const FormInput = styled(Field)`\n  font-size: 16px;\n  display: block;\n  font-family: 'Rubik', sans-serif;\n  width: 100%;\n  color: ${({ isvalid }) => (isvalid !== 'false' ? '#000' : '#f00')};\n  padding: 10px 1px;\n  border: 0;\n  border-bottom: 1px solid\n    ${({ isvalid }) => (isvalid !== 'false' ? '#000' : '#f00')};\n  outline: none;\n  transition: all 0.5s;\n  &::placeholder {\n    text-transform: uppercase;\n  }\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  color: #f00;\n  font-size: 14px;\n  margin-top: 5px;\n  text-align: left;\n  padding-left: 5px;\n`;\n\nexport const LogInSignUpBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50%;\n  border: none;\n  margin: 0 auto;\n  padding: 10px;\n  font-size: 18px;\n  font-family: 'Rubik', sans-serif;\n  cursor: pointer;\n  background-color: #fff;\n  color: #000;\n  border: 1px solid #000;\n  border-radius: 4px;\n  letter-spacing: 0.2px;\n  outline: 0;\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #fff;\n    background-color: #000;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const PhoneBookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 500px;\n  width: 100%;\n  padding: 20px;\n  border: 2px solid #000;\n  border-radius: 5px;\n`;\n\nexport const PhoneBookLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n  color: #fff;\n  box-sizing: border-box;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  width: 100%;\n`;\nexport const PhoneBookInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  font-size: 20px;\n  font-weight: 500;\n  border: 1px solid #000;\n`;\n\nexport const PhoneBookBtn = styled.button`\n  font-family: inherit;\n  padding: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  border: 1px solid #000;\n  border-radius: 4px;\n  cursor: pointer;\n  color: #000;\n  background: #fff;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #fff;\n    background: #000;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nimport { PhoneBookForm, PhoneBookLabel, PhoneBookBtn } from './Form.styled';\n\nimport { addContact } from 'redux/contacts/operations';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContact(contact));\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <PhoneBookForm onSubmit={handleSubmit}>\n        <PhoneBookLabel>\n          Name\n          <TextField\n            onChange={onInputChange}\n            required\n            type=\"text\"\n            name=\"name\"\n            label=\"Leandro Kaplan\"\n            variant=\"filled\"\n            InputLabelProps={{\n              style: { color: '#000' },\n            }}\n            fullWidth\n          />\n        </PhoneBookLabel>\n        <PhoneBookLabel>\n          Number\n          <TextField\n            onChange={onInputChange}\n            InputLabelProps={{\n              style: {\n                color: '#000',\n              },\n            }}\n            fullWidth\n            required\n            type=\"text\"\n            name=\"number\"\n            label=\"+38-000-000-00-00\"\n            variant=\"filled\"\n          />\n        </PhoneBookLabel>\n        <PhoneBookBtn type=\"submit\">Add Contact</PhoneBookBtn>\n      </PhoneBookForm>\n    </div>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 10px;\n  border: 1px solid #000;\n  border-radius: 5px;\n  width: 300px;\n  margin: 0 auto;\n  margin-top: 20px;\n  margin-bottom: 50px;\n`;\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  gap: 20px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 18px;\n  padding: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  font-family: inherit;\n  padding: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  border: 1px solid #000;\n  border-radius: 4px;\n  cursor: pointer;\n  color: #fff;\n  background: #000;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #000;\n    background: #fff;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const ContactInfo = styled.span`\n  font-size: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const NotaficationContainer = styled.div`\n  max-width: 600px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const NotaficationText = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n`;\n","import { NotaficationContainer, NotaficationText } from './Notafication.styled';\n\nconst Notification = () => {\n  return (\n    <NotaficationContainer>\n      <NotaficationText>\n        You don't have any contacts in phonebook\n      </NotaficationText>\n    </NotaficationContainer>\n  );\n};\n\nexport default Notification;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  ContactInfo,\n  InfoWrapper,\n  ContactsList,\n  ContactsItem,\n  DeleteBtn,\n} from './Contacts.styled';\n\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\nimport { useSelectors } from '../../hooks/UseSelector';\nimport Notification from '../notafication/Notafication';\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n\n  const { contacts, filter, isLoggedIn } = useSelectors();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter ? filter.toLowerCase() : '';\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ContactsList>\n      {isLoggedIn && visibleContacts.length > 0 ? (\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactsItem key={id}>\n            <InfoWrapper>\n              <ContactInfo>{name}:</ContactInfo>\n              <ContactInfo>{number}</ContactInfo>\n            </InfoWrapper>\n            <DeleteBtn onClick={e => dispatch(deleteContact(id))}>\n              Delete\n            </DeleteBtn>\n          </ContactsItem>\n        ))\n      ) : (\n        <Notification />\n      )}\n    </ContactsList>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const FilterTitle = styled.label`\n  text-aligh: left;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weigth: 700;\n`;\n\nexport const FilterInput = styled.input`\n  width: 600px;\n  padding: 5px;\n  margin-bottom: 20px;\n  border: 1px solid #000;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weigth: 500;\n  margin-top: 5px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nimport { FilterTitle, FilterContainer } from './Filter.styled';\n\nimport { filterSlice } from '../../redux/filter/slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterContainer>\n      <FilterTitle>Find contacts by Name</FilterTitle>\n      <TextField\n        onChange={e => dispatch(filterSlice(e.target.value))}\n        required\n        type=\"text\"\n        name=\"name\"\n        label=\"Enter contact name\"\n        variant=\"filled\"\n        InputLabelProps={{\n          style: { color: '#000' },\n        }}\n      />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport { Heading } from 'components/pages.styled';\n\nimport { Form, Contact, Filter } from 'components/index';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Form />\n      <Heading>Contacts</Heading>\n      <Filter />\n      <Contact />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Heading","styled","HomeContainer","HomeTitle","HomeSubtitle","HomeText","WrapperStyled","FormTitle","FormContent","FormLabel","FormInput","Field","isvalid","FormError","ErrorMessage","LogInSignUpBtn","PhoneBookForm","PhoneBookLabel","PhoneBookBtn","useState","name","setName","number","setNumber","dispatch","useDispatch","onInputChange","e","target","value","onSubmit","preventDefault","contact","addContact","reset","TextField","onChange","required","type","label","variant","InputLabelProps","style","color","fullWidth","ContactsList","ContactsItem","DeleteBtn","InfoWrapper","ContactInfo","NotaficationContainer","NotaficationText","useSelectors","contacts","filter","isLoggedIn","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","length","map","id","onClick","deleteContact","FilterContainer","FilterTitle","filterSlice"],"sourceRoot":""}